//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Health.Model.DBContext
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class HealthCareEntities : DbContext
    {
        public HealthCareEntities()
            : base("name=HealthCareEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tblHospitalDetail> tblHospitalDetails { get; set; }
        public virtual DbSet<tblHospitalRegister> tblHospitalRegisters { get; set; }
        public virtual DbSet<tblReview> tblReviews { get; set; }
        public virtual DbSet<tblUsageDetail> tblUsageDetails { get; set; }
        public virtual DbSet<tblUserRegister> tblUserRegisters { get; set; }
    
        public virtual ObjectResult<sp_getHospitalData_Result> sp_getHospitalData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getHospitalData_Result>("sp_getHospitalData");
        }
    
        public virtual int sp_HosptialRegister(ObjectParameter returnValue, string name, string description, string address, string city, string state, string country, Nullable<decimal> pinCode, Nullable<decimal> phone, Nullable<decimal> mobile, string email, Nullable<System.DateTime> date, Nullable<bool> approval, string id, string password, Nullable<decimal> lat, Nullable<decimal> @long)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var pinCodeParameter = pinCode.HasValue ?
                new ObjectParameter("PinCode", pinCode) :
                new ObjectParameter("PinCode", typeof(decimal));
    
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(decimal));
    
            var mobileParameter = mobile.HasValue ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(decimal));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var approvalParameter = approval.HasValue ?
                new ObjectParameter("approval", approval) :
                new ObjectParameter("approval", typeof(bool));
    
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var latParameter = lat.HasValue ?
                new ObjectParameter("lat", lat) :
                new ObjectParameter("lat", typeof(decimal));
    
            var longParameter = @long.HasValue ?
                new ObjectParameter("long", @long) :
                new ObjectParameter("long", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HosptialRegister", returnValue, nameParameter, descriptionParameter, addressParameter, cityParameter, stateParameter, countryParameter, pinCodeParameter, phoneParameter, mobileParameter, emailParameter, dateParameter, approvalParameter, idParameter, passwordParameter, latParameter, longParameter);
        }
    
        public virtual int sp_LogIn(ObjectParameter is_match, string email, string password)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_LogIn", is_match, emailParameter, passwordParameter);
        }
    
        public virtual int sp_LoginHospital(ObjectParameter is_match, string id, string password)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_LoginHospital", is_match, idParameter, passwordParameter);
        }
    
        public virtual int sp_LoginUser(ObjectParameter is_match, string email, string password)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_LoginUser", is_match, emailParameter, passwordParameter);
        }
    
        public virtual int sp_UserRegister(ObjectParameter returnValue, string firstname, string lastname, string gender, Nullable<int> age, Nullable<decimal> mobile, string password, string email, Nullable<System.DateTime> date, Nullable<int> points)
        {
            var firstnameParameter = firstname != null ?
                new ObjectParameter("Firstname", firstname) :
                new ObjectParameter("Firstname", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("Lastname", lastname) :
                new ObjectParameter("Lastname", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("age", age) :
                new ObjectParameter("age", typeof(int));
    
            var mobileParameter = mobile.HasValue ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(decimal));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var pointsParameter = points.HasValue ?
                new ObjectParameter("points", points) :
                new ObjectParameter("points", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UserRegister", returnValue, firstnameParameter, lastnameParameter, genderParameter, ageParameter, mobileParameter, passwordParameter, emailParameter, dateParameter, pointsParameter);
        }
    }
}
